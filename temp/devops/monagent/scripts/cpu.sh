#!/bin/bash

# NOTE :
#	 Please do not edit this file, as it will be replaced during upgrade.

# Top command - The top command calculates Cpu(s) by looking at the change in CPU time values between samples. 
#				When you first run it, it has no previous sample to compare to, so these initial values are the percentages 
#				since boot

PROCESSOR_NAME=`grep -E 'model name' /proc/cpuinfo | awk -F':' 'NR==1{print $2}'`

getCpuDetails() {
	echoMessage "cpu details"
	top -b -d1 -n2 | grep -i "Cpu(s)" | awk 'BEGIN {
        FS="[ %][a-z][a-z],";
    }
    {
        #print "Processing Record ",NR,NF;
        if (NR == 2) {
        	#print "Parsing line : "$0
        	#print "Parsed value : "$4
            cpu_idle_percentage = $4
            gsub(",", ".", cpu_idle_percentage)
            cpu_util = 100.0 - cpu_idle_percentage
            print "CPU_Name : cpu"
            print "CPU_Idle_Percentage : ",cpu_idle_percentage           
            printf "CPU_Utilization : %.2f\n",cpu_util 
        }
    }'
}

getCpuCores() {
	cat /proc/cpuinfo | awk 'BEGIN {
		FS=":";
		cpu_count = 0;
	}
	{
		split($1, temp_arr, "%")
		name = temp_arr[1]
		sub(/[ \t]+$/,"",name) #remove leading and trailing spaces.
		#print ":"name":"
		#print cpu_count
		if (name == "processor")
		{
			cpu_count+=1
		}
	}
	END {
		print "Cpu cores :",cpu_count
	}'
}

getProcessorName() {
	grep -E 'model name' /proc/cpuinfo | awk 'BEGIN {
			FS=":";
			ORS="\n";			
		}
		{
			if (NR == 1) {
				print "Processor Name :",$2
			}
		}'
	
}

#echo "Process_Name : $PROCESSOR_NAME"

getCpuInterrupts() {
	cat /proc/stat | grep -i 'intr ' | awk '{ print "Interrupts :",$2 }'
}

getCpuContextSwitches() {
	cat /proc/stat | grep -i 'ctxt ' | awk '{ print "Context Switches :",$2 }'
}

main() {
	if [ "$1" == "cpu_cores" ]; then
		getCpuCores
	elif [ "$1" == "cpu_util" ]; then
		getCpuDetails
		getProcessorName
	elif [ "$1" == "cpu_intr" ]; then
		getCpuInterrupts
	elif [ "$1" == "cpu_cs" ]; then
		getCpuContextSwitches
	fi
}

main $1
